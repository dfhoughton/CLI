Roadmap of planned changes.

key:
  . item awaiting attention
  - deprecated item
  * item completed

Periodically I'll clear out this list, moving completed and deprecated items to a sort of
historical holding pen at the end.

TODO
====

. make internationalizable
. create unit tests for more of the validation rules
. remove unnecessary IntSet?
* create an example directory
* document how to produce a branching CLI such as you have in git
  and cvs
. check error reporting when first option is unknown and other options are required
* improve javadocs
* improve default reporting for StreamCoercion or any other coercion which 
  doesn't produce human-readable stringifications
* add Cli.Res.SHH to silence description augmentation for a particular option
* add Cli.Mod.SHH to silence description augmentation for all options
* add miscellaneous section to documentation to cover the bits left out elsewhere
. make the option names wrap (maybe they already do? I forget)
* make non-abstract dfh.cli classes serializable

RELICS
======

Things swept out of TODO list:

* move Modifiers into dfh.cli.Cli to minimize import statements
* automatically note required options
* create die method that dies with an error statement and usage
* add number set validation rule
* fix bug where negative numbers are interpreted as options
* make dfh.cli.Cli object reusable -- add clear() method
* add license file to jar
* add word wrapping
* make it possible to query for default values
* add boolean Cli.defined(String) to see whether an option has been set
* let an empty array create a blank line in the usage info
* add item to Res turning off automatic addition of information to option description
* make sure -? is working; and set up a test for this
* let ValidationRules apply to repeated arguments
* make inclusion of help option a default
* improve validation rule descriptions
* add coercion of arbitrary types from strings
* add default collection capability
* improve detection of when to insert semicolons during option description generation
* add unit Range
* keep dump from breaking on slurpy arguments
* create Cli.Opt.QMARK for an optional argument
* improve precision handling of numbers
* improve number retrieval, adding BigInt and BigDecimal
* make assignment of argument name more intelligent, reflecting the type of argument expected
* document new blank line syntax
- document changes listed in change log for version 1.07
* document ValidationRule.shh()
* document automatic addition of "repeatable" to option descriptions
* document Mod.NO_HELP
* document coercions
* make unit tests to make sure coercions work when not set
